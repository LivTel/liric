#!/bin/csh
# Version: $Revision: c8a5b86d78a4fc7b83dd5b00ba81ef714d951839 $
# By $Author: Chris Mottram <C.Mottram@ljmu.ac.uk> $
# Install a deployment tar created by liric_make_deployment
# Usage:
#	liric_tar_install <machine>
set delbin = 1
set machine_name = ""
foreach arg ( $argv )
	switch ( $arg )
		case "-nodelbin":
		    set delbin = 0
	     	    breaksw
		case "-help":
		    echo "$0 [-help] [-nodelbin] <machine>"
		    echo "\t -nodelbin does not delete the binary directory before installation,"
		    echo "\t\tfor multiple instrument installations."
	     	    breaksw
		default:
		    set machine_name = $arg
		    breaksw
	endsw	   
end
if ( "${machine_name}" == "") then
	echo "$0 [-help] [-nodelbin] <machine>"
	echo "\t-nodelbin does not delete the binary directory before installation, "
	echo "\t\tfor multiple instrument installations."
	exit 0
endif
set current_dir         = `pwd`
set icc                 = icc
set deployment_tar 	= "liric_deployment_${machine_name}.tar"
#
# Ensure new installation files are not under /icc (which gets deleted)
#
echo "${current_dir}" | /bin/grep -q '/icc'
set grep_status = $status
if( ${grep_status} == 0 ) then
    echo "Installation files under /icc. Move ALL file to ~eng/Downloads/liric/<date> and try again."
    exit 1
endif
#
# Check new installation is in current_dir
#
set file_list = "${deployment_tar}.gz icc_cshrc icc_cshrc_edit.awk"
foreach file ( ${file_list} )
    if( ! -e ${file} ) then
        echo "Failed to find ${file}. New installation not ready to install."
        exit 1
    endif
end
#
# Ensure LD_LIBRARY_PATH includes liric libraries dir so send_command below works.
#
if ( -d /icc/bin/liric/lib/${HOSTTYPE} ) then
    echo "Adding /icc/bin/liric/lib/${HOSTTYPE} to LD_LIBRARY_PATH."
    setenv LD_LIBRARY_PATH "${LD_LIBRARY_PATH}:/icc/bin/liric/lib/${HOSTTYPE}"
endif
#
# Kill any running processes
#
if ( -x /icc/bin/scripts/killhup.csh ) then
    echo "Trying to kill AutoBooter."
    /icc/bin/scripts/killhup.csh AutoBooter
else
    echo "killhup not found:FAILED to stop running processess."
endif
if ( -x /icc/bin/commandserver/test/${HOSTTYPE}/send_command  ) then
    echo "Trying to shutdown liric c layer."
    /icc/bin/commandserver/test/${HOSTTYPE}/send_command  -h ${machine_name} -p 8284 -c "shutdown"
else
    echo "send_command not found:FAILED to stop running liric."
endif
#
# Kill nfs server - /icc/tmp is usually mounted for the rcs machine
#
echo "Stopping NFS server (/icc/tmp is exported)..."
/etc/init.d/nfs stop
#
# Delete old installation
# DON'T delete the log directory.
# Only delete old binaries if delbin set.
#
if( ${delbin} == 1 ) then
    if( -d /${icc}/bin ) then
	echo "Deleting /${icc}/bin directory."
	rm -rf /${icc}/bin/*
    endif
endif
#
# Create new top level directory (if it does not already exist
#
if( ! -d /${icc} ) then
    mkdir /${icc}
endif
#
# Extract new installation
#
echo "Copying deployment tar ${current_dir}/${deployment_tar}.gz to /."
cp ${current_dir}/${deployment_tar}.gz /
cd /
echo "Gunziping deployment tar ${deployment_tar}.gz."
gunzip ${deployment_tar}.gz
echo "Extracting deployment tar."
tar xvf ${deployment_tar}
echo "Removing deployment tar."
rm -f ${deployment_tar}
#
# Reseting / and /lib/systemd/system/ ownership
#
foreach dir ( /  /lib /lib/systemd /lib/systemd/system )
    echo "Reseting ${dir} ownership."
    chown root:root ${dir}
    chmod go-w ${dir}
end
#
# systemd setup
#
# systemd script already copied as /lib/systemd/system/autobooter.service
echo "Setting up autobooter systemd script: Start autobooter.service."
systemctl start autobooter.service
echo "Setting up autobooter systemd script: Enable autobooter.service."
systemctl enable autobooter.service
echo "Setting up autobooter systemd script: Query status of autobooter.service."
systemctl status autobooter.service
#
# Set up /icc ownership
#
echo "Setting up /icc ownership."
chown -R eng:ltdev /icc
#
# Editing ~eng .cshrc
#
echo "Editing eng .cshrc"
cat ~eng/.cshrc | awk -f ${current_dir}/icc_cshrc_edit.awk > ~eng/.cshrc.tmp
cat ~eng/.cshrc.tmp ${current_dir}/icc_cshrc > ~eng/.cshrc
rm -f ~eng/.cshrc.tmp
#
# Finished
#
echo "Installation completed, please 'reboot'."

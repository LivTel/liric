# raptor.c.properties
#
# What mechanisms can this instance of the C layer talk to on this machine?
#
# We always have a ccd to talk to. This next option switches off the startup code so we can test the rotator/
# filter wheel when the ccd is disconnected
detector.enable				=true
nudgeomatic.enable			=true
filter_wheel.enable			=true

# logging
logging.directory_name			=/icc/log
logging.root.log			=raptor_c_log
logging.root.error			=raptor_c_error
logging.udp.active			=false
logging.udp.hostname			=ltproxy
logging.udp.port_number			=2371

# server configuration
command.server.port_number		=1111

# memory locking / process priority
memory.lock.all				=false
process.priority.increase		=false

# filter_wheel configuration
# This configuration should match the Java layer and other C layer configuration
# The name to id mapping is used for FITS header generation by both C layers
filter_wheel.device_name		=/dev/hidraw0
filter_wheel.filter.name.1		=H
filter_wheel.filter.id.1		=H-01
filter_wheel.filter.name.2		=J
filter_wheel.filter.id.2		=J-01
filter_wheel.filter.name.3		=Y
filter_wheel.filter.id.3		=Y-01
filter_wheel.filter.name.4		=Z
filter_wheel.filter.id.4		=Z-01
filter_wheel.filter.name.5		=I
filter_wheel.filter.id.5		=I-01

#
# Detector configuration
#
detector.format_dir			=/icc/bin/raptor/fmt
detector.coadd_exposure_length.short 	= 100
detector.coadd_exposure_length.long  	= 1000
#
# data directory and instrument code for the specified Andor camera index
#
file.fits.instrument_code		=j
file.fits.path				=/icc/tmp
#
# Whether to flip the output image before writing to disk
#
raptor.multrun.image.flip.x		=false
raptor.multrun.image.flip.y		=false
#
# thread priority
#
thread.priority.normal			=1
thread.priority.exposure		=99
